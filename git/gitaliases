[alias]
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Find commits by source code

    cc = "!f() { \
      git log --pretty=custom --decorate --date=short -S\"$1\"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Find commits by commit message

    cm = "!f() { \
      git log --pretty=custom --decorate --date=short --grep=\"$1\"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # List remote branches

    lrb = "!f() { \
      remote="${1:-origin}"; \
      git ls-remote --heads "$remote"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Merge GitHub pull request on top of the current branch or,
    # if a branch name is specified, on top of the specified branch

    mpr = "!f() { \
      declare currentBranch=\"$(git symbolic-ref --short HEAD)\"; \
      declare branch=\"${2:-$currentBranch}\"; \
      if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
          git fetch origin refs/pull/$1/head:pr/$1 && \
          git checkout -B $branch && \
          git rebase $branch pr/$1 && \
          git checkout -B $branch && \
          git merge pr/$1 && \
          git branch -D pr/$1 && \
          git commit --amend -m \"$(git log -1 --pretty=%B)\n\nClose #$1\"; \
      fi \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Remove the tag with the specified tag name if
    # exists and tag the latest commit with that name

    retag = "!f() { \
      git tag -d "$1" &> /dev/null; \
      git tag $1; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Fetch origin and checkout

    get = "!f() { \
      git fetch origin "$1"; \
      git checkout "$1"; \
    }; f"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


[pretty]
    custom = "%C(magenta)%h%C(red)%d %C(yellow)%ar %C(green)%s %C(yellow)(%an)"
    #                     │        │            │            │             └─ author name
    #                     │        │            │            └─ message
    #                     │        │            └─ date (relative)
    #                     │        └─ decorations (branch, heads or tags)
    #                     └─ hash (abbreviated)